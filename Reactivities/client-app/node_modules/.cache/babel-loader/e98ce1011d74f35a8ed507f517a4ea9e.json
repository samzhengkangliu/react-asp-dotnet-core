{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/app/layout/App.tsx\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\n\nconst App = () => {\n  const [activities, setActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState(null);\n\n  const handleSelectActivity = id => {\n    setSelectedActivity(activities.filter(activity => activity.id === id)[0]);\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/activities\").then(response => {\n      setActivities(response.data);\n    });\n  }, []); // ensure useEffect only runs one time only every time we reach this page\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      marginTop: \"7em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActivityDashboard, {\n    activities: activities,\n    selectedActivity: selectedActivity,\n    selectActivity: handleSelectActivity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/app/layout/App.tsx"],"names":["React","useEffect","useState","Fragment","axios","Container","NavBar","ActivityDashboard","App","activities","setActivities","selectedActivity","setSelectedActivity","handleSelectActivity","id","filter","activity","get","then","response","data","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,iBAAP,MAA8B,uDAA9B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAc,EAAd,CAA5C;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CACtD,IADsD,CAAxD;;AAIA,QAAMW,oBAAoB,GAAIC,EAAD,IAAgB;AAC3CF,IAAAA,mBAAmB,CAACH,UAAU,CAACM,MAAX,CAAmBC,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBA,EAAhD,EAAoD,CAApD,CAAD,CAAnB;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFa,GADH,CACoB,sCADpB,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBT,MAAAA,aAAa,CAACS,QAAQ,CAACC,IAAV,CAAb;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT,CAVgB,CAgBR;;AAER,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AACE,IAAA,UAAU,EAAEZ,UADd;AAEE,IAAA,gBAAgB,EAAEE,gBAFpB;AAGE,IAAA,cAAc,EAAEE,oBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAYD,CA9BD;;AAgCA,eAAeL,GAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"semantic-ui-react\";\nimport { IActivity } from \"../models/activity\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\n\nconst App = () => {\n  const [activities, setActivities] = useState<IActivity[]>([]);\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(\n    null\n  );\n\n  const handleSelectActivity = (id: string) => {\n    setSelectedActivity(activities.filter((activity) => activity.id === id)[0]);\n  };\n\n  useEffect(() => {\n    axios\n      .get<IActivity[]>(\"http://localhost:5000/api/activities\")\n      .then((response) => {\n        setActivities(response.data);\n      });\n  }, []); // ensure useEffect only runs one time only every time we reach this page\n\n  return (\n    <Fragment>\n      <NavBar />\n      <Container style={{ marginTop: \"7em\" }}>\n        <ActivityDashboard\n          activities={activities}\n          selectedActivity={selectedActivity!}\n          selectActivity={handleSelectActivity}\n        />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}