{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/dashboard/ActivityList.tsx\";\nimport React, { useContext } from \"react\";\nimport { Item, Button, Label, Segment } from \"semantic-ui-react\"; // Interface\n\n// Mobx\nimport { observer } from \"mobx-react-lite\";\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\n\nconst ActivityList = ({\n  deleteActivity,\n  submitting,\n  target\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    activities,\n    selectActivity\n  } = activityStore;\n  return /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Item.Group, {\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, activities.map(activity => /*#__PURE__*/React.createElement(Item, {\n    key: activity.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Item.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item.Header, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, activity.title), /*#__PURE__*/React.createElement(Item.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, activity.date), /*#__PURE__*/React.createElement(Item.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, activity.description), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, activity.city, \", \", activity.venue)), /*#__PURE__*/React.createElement(Item.Extra, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    floated: \"right\",\n    content: \"View\",\n    color: \"blue\",\n    onClick: () => selectActivity(activity.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: activity.id,\n    loading: target === activity.id && submitting,\n    floated: \"right\",\n    content: \"Delete\",\n    color: \"red\",\n    onClick: event => deleteActivity(event, activity.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    content: activity.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default observer(ActivityList);","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/dashboard/ActivityList.tsx"],"names":["React","useContext","Item","Button","Label","Segment","observer","ActivityStore","ActivityList","deleteActivity","submitting","target","activityStore","activities","selectActivity","map","activity","id","title","date","description","city","venue","event","category"],"mappings":";AAAA,OAAOA,KAAP,IAAgCC,UAAhC,QAAkD,OAAlD;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C,C,CAEA;;AAGA;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAWA,MAAMC,YAA8B,GAAG,CAAC;AACtCC,EAAAA,cADsC;AAEtCC,EAAAA,UAFsC;AAGtCC,EAAAA;AAHsC,CAAD,KAIjC;AACJ,QAAMC,aAAa,GAAGX,UAAU,CAACM,aAAD,CAAhC;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAiCF,aAAvC;AAEA,sBACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,UAAU,CAACE,GAAX,CAAgBC,QAAD,iBACd,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,QAAQ,CAACE,KAA9B,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,QAAQ,CAACG,IAArB,CAFF,eAGE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,QAAQ,CAACI,WAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACK,IADZ,QACoBL,QAAQ,CAACM,KAD7B,CAFF,CAHF,eASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAE,MAAMR,cAAc,CAACE,QAAQ,CAACC,EAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAED,QAAQ,CAACC,EADjB;AAEE,IAAA,OAAO,EAAEN,MAAM,KAAKK,QAAQ,CAACC,EAApB,IAA0BP,UAFrC;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,OAAO,EAAC,QAJV;AAKE,IAAA,KAAK,EAAC,KALR;AAME,IAAA,OAAO,EAAGa,KAAD,IAAWd,cAAc,CAACc,KAAD,EAAQP,QAAQ,CAACC,EAAjB,CANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAeE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,OAAO,EAAED,QAAQ,CAACQ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CATF,CADF,CADD,CADH,CADF,CADF;AAqCD,CA7CD;;AA+CA,eAAelB,QAAQ,CAACE,YAAD,CAAvB","sourcesContent":["import React, { SyntheticEvent, useContext } from \"react\";\nimport { Item, Button, Label, Segment } from \"semantic-ui-react\";\n\n// Interface\nimport { IActivity } from \"../../../app/models/activity\";\n\n// Mobx\nimport { observer } from \"mobx-react-lite\";\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\n\ninterface IProps {\n  deleteActivity: (\n    event: SyntheticEvent<HTMLButtonElement>,\n    id: string\n  ) => void;\n  submitting: boolean;\n  target: string;\n}\n\nconst ActivityList: React.FC<IProps> = ({\n  deleteActivity,\n  submitting,\n  target,\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const { activities, selectActivity } = activityStore;\n\n  return (\n    <Segment clearing>\n      <Item.Group divided>\n        {activities.map((activity) => (\n          <Item key={activity.id}>\n            <Item.Content>\n              <Item.Header as=\"a\">{activity.title}</Item.Header>\n              <Item.Meta>{activity.date}</Item.Meta>\n              <Item.Description>\n                <div>{activity.description}</div>\n                <div>\n                  {activity.city}, {activity.venue}\n                </div>\n              </Item.Description>\n              <Item.Extra>\n                <Button\n                  floated=\"right\"\n                  content=\"View\"\n                  color=\"blue\"\n                  onClick={() => selectActivity(activity.id)}\n                />\n                <Button\n                  name={activity.id}\n                  loading={target === activity.id && submitting}\n                  floated=\"right\"\n                  content=\"Delete\"\n                  color=\"red\"\n                  onClick={(event) => deleteActivity(event, activity.id)}\n                />\n                <Label basic content={activity.category} />\n              </Item.Extra>\n            </Item.Content>\n          </Item>\n        ))}\n      </Item.Group>\n    </Segment>\n  );\n};\n\nexport default observer(ActivityList);\n"]},"metadata":{},"sourceType":"module"}