{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Grid, Segment, Form, Button } from \"semantic-ui-react\";\nimport { Form as FinalForm, Field } from \"react-final-form\"; // Interface\n\nimport TextInput from \"../../../app/common/form/TextInput\"; // Mobx\n\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\nimport { observer } from \"mobx-react-lite\";\n// Components\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\nimport SelectInput from \"../../../app/common/form/SelectInput\";\nimport { category } from \"../../../app/common/options/categoryOptions\";\nimport DateInput from \"../../../app/common/form/DateInput\";\nimport { combineDateAndTime } from \"../../../app/common/util/util\";\n\nconst ActivityForm = ({\n  match,\n  history\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    activity: initialFormState,\n    loadActivity,\n    clearActivity\n  } = activityStore;\n  const [activity, setActivity] = useState({\n    id: undefined,\n    title: \"\",\n    category: \"\",\n    description: \"\",\n    date: undefined,\n    time: undefined,\n    city: \"\",\n    venue: \"\"\n  });\n  useEffect(() => {\n    if (match.params.id && !activity.id) {\n      loadActivity(match.params.id).then(() => initialFormState && setActivity(initialFormState));\n    }\n\n    return () => {\n      clearActivity();\n    };\n  }, [loadActivity, clearActivity, match.params.id, initialFormState, activity.id]); // const handleSubmit = () => {\n  //   if (activity.id.length === 0) {\n  //     let newActivity = {\n  //       ...activity,\n  //       id: uuid(),\n  //     };\n  //     createActivity(newActivity).then(() =>\n  //       history.push(`/activities/${newActivity.id}`)\n  //     );\n  //   } else {\n  //     editActivity(activity).then(() =>\n  //       history.push(`/activities/${activity.id}`)\n  //     );\n  //   }\n  // };\n\n  const handleFinalFormSubmit = values => {\n    const dateAndTime = combineDateAndTime(values.date, values.time);\n    const {\n      date,\n      time,\n      ...activity\n    } = values;\n    activity.date = dateAndTime;\n    console.log(activity);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FinalForm, {\n    onSubmit: handleFinalFormSubmit,\n    render: ({\n      handleSubmit\n    }) => /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      placeholder: \"Title\",\n      value: activity.title,\n      component: TextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      placeholder: \"Description\",\n      rows: 3,\n      value: activity.description,\n      component: TextAreaInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"category\",\n      placeholder: \"Category\",\n      options: category,\n      value: activity.category,\n      component: SelectInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"date\",\n      placeholder: \"Date\",\n      date: true,\n      value: activity.date,\n      component: DateInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"time\",\n      placeholder: \"Time\",\n      time: true,\n      value: activity.date,\n      component: DateInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Field, {\n      name: \"city\",\n      placeholder: \"City\",\n      value: activity.city,\n      component: TextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"venue\",\n      placeholder: \"Venue\",\n      value: activity.venue,\n      component: TextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      loading: submitting,\n      floated: \"right\",\n      positive: true,\n      type: \"submit\",\n      content: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => history.push(\"/activities\"),\n      floated: \"right\",\n      type: \"button\",\n      content: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default observer(ActivityForm);","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx"],"names":["React","useState","useContext","useEffect","Grid","Segment","Form","Button","FinalForm","Field","TextInput","ActivityStore","observer","TextAreaInput","SelectInput","category","DateInput","combineDateAndTime","ActivityForm","match","history","activityStore","createActivity","editActivity","submitting","activity","initialFormState","loadActivity","clearActivity","setActivity","id","undefined","title","description","date","time","city","venue","params","then","handleFinalFormSubmit","values","dateAndTime","console","log","handleSubmit","push"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent, useContext, useEffect } from \"react\";\nimport { Grid, Segment, Form, Button } from \"semantic-ui-react\";\nimport { v4 as uuid } from \"uuid\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\n// Interface\nimport { IActivityFormValues } from \"../../../app/models/activity\";\nimport TextInput from \"../../../app/common/form/TextInput\";\n\n// Mobx\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\n// Components\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\nimport SelectInput from \"../../../app/common/form/SelectInput\";\nimport { category } from \"../../../app/common/options/categoryOptions\";\nimport DateInput from \"../../../app/common/form/DateInput\";\nimport { combineDateAndTime } from \"../../../app/common/util/util\";\n\ninterface DetailsParams {\n  id: string;\n}\n\nconst ActivityForm: React.FC<RouteComponentProps<DetailsParams>> = ({\n  match,\n  history,\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    activity: initialFormState,\n    loadActivity,\n    clearActivity,\n  } = activityStore;\n\n  const [activity, setActivity] = useState<IActivityFormValues>({\n    id: undefined,\n    title: \"\",\n    category: \"\",\n    description: \"\",\n    date: undefined,\n    time: undefined,\n    city: \"\",\n    venue: \"\",\n  });\n\n  useEffect(() => {\n    if (match.params.id && !activity.id) {\n      loadActivity(match.params.id).then(\n        () => initialFormState && setActivity(initialFormState)\n      );\n    }\n    return () => {\n      clearActivity();\n    };\n  }, [\n    loadActivity,\n    clearActivity,\n    match.params.id,\n    initialFormState,\n    activity.id,\n  ]);\n\n  // const handleSubmit = () => {\n  //   if (activity.id.length === 0) {\n  //     let newActivity = {\n  //       ...activity,\n  //       id: uuid(),\n  //     };\n  //     createActivity(newActivity).then(() =>\n  //       history.push(`/activities/${newActivity.id}`)\n  //     );\n  //   } else {\n  //     editActivity(activity).then(() =>\n  //       history.push(`/activities/${activity.id}`)\n  //     );\n  //   }\n  // };\n\n  const handleFinalFormSubmit = (values: any) => {\n    const dateAndTime = combineDateAndTime(values.date, values.time);\n    const { date, time, ...activity } = values;\n    activity.date = dateAndTime\n\n    console.log(activity);\n  };\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <Segment clearing>\n          <FinalForm\n            onSubmit={handleFinalFormSubmit}\n            render={({ handleSubmit }) => (\n              <Form onSubmit={handleSubmit}>\n                <Field\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  value={activity.title}\n                  component={TextInput}\n                />\n                <Field\n                  name=\"description\"\n                  placeholder=\"Description\"\n                  rows={3}\n                  value={activity.description}\n                  component={TextAreaInput}\n                />\n                <Field\n                  name=\"category\"\n                  placeholder=\"Category\"\n                  options={category}\n                  value={activity.category}\n                  component={SelectInput}\n                />\n                <Form.Group widths=\"equal\">\n                  <Field\n                    name=\"date\"\n                    placeholder=\"Date\"\n                    date={true}\n                    value={activity.date}\n                    component={DateInput}\n                  />\n                  <Field\n                    name=\"time\"\n                    placeholder=\"Time\"\n                    time={true}\n                    value={activity.date}\n                    component={DateInput}\n                  />\n                </Form.Group>\n\n                <Field\n                  name=\"city\"\n                  placeholder=\"City\"\n                  value={activity.city}\n                  component={TextInput}\n                />\n                <Field\n                  name=\"venue\"\n                  placeholder=\"Venue\"\n                  value={activity.venue}\n                  component={TextInput}\n                />\n                <Button\n                  loading={submitting}\n                  floated=\"right\"\n                  positive\n                  type=\"submit\"\n                  content=\"Submit\"\n                />\n                <Button\n                  onClick={() => history.push(\"/activities\")}\n                  floated=\"right\"\n                  type=\"button\"\n                  content=\"Cancel\"\n                />\n              </Form>\n            )}\n          />\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityForm);\n"]},"metadata":{},"sourceType":"module"}