{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/dashboard/ActivityDashboard.tsx\";\nimport React, { useContext } from \"react\";\nimport { Grid, GridColumn } from \"semantic-ui-react\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityDetails from \"../details/ActivityDetails\";\nimport ActivityForm from \"../form/ActivityForm\"; // Mobx\n\nimport { observer } from \"mobx-react-lite\";\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\n\nconst ActivityDashboard = ({\n  activities,\n  selectedActivity,\n  setSelectedActivity,\n  selectActivity,\n  editMode,\n  setEditMode,\n  createActivity,\n  editActivity,\n  deleteActivity,\n  submitting,\n  target\n}) => {\n  const activityStore = useContext(ActivityStore);\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridColumn, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActivityList, {\n    activities: activities,\n    selectActivity: selectActivity,\n    deleteActivity: deleteActivity,\n    submitting: submitting,\n    target: target,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(GridColumn, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, selectedActivity && !editMode && /*#__PURE__*/React.createElement(ActivityDetails, {\n    activity: selectedActivity,\n    setSelectedActivity: setSelectedActivity,\n    setEditMode: setEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), editMode && /*#__PURE__*/React.createElement(ActivityForm, {\n    key: selectedActivity && selectedActivity.id || 0,\n    activity: selectedActivity,\n    setEditMode: setEditMode,\n    createActivity: createActivity,\n    editActivity: editActivity,\n    submitting: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default observer(ActivityDashboard);","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/dashboard/ActivityDashboard.tsx"],"names":["React","useContext","Grid","GridColumn","ActivityList","ActivityDetails","ActivityForm","observer","ActivityStore","ActivityDashboard","activities","selectedActivity","setSelectedActivity","selectActivity","editMode","setEditMode","createActivity","editActivity","deleteActivity","submitting","target","activityStore","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgCC,UAAhC,QAAkD,OAAlD;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAmBA,MAAMC,iBAAmC,GAAG,CAAC;AAC3CC,EAAAA,UAD2C;AAE3CC,EAAAA,gBAF2C;AAG3CC,EAAAA,mBAH2C;AAI3CC,EAAAA,cAJ2C;AAK3CC,EAAAA,QAL2C;AAM3CC,EAAAA,WAN2C;AAO3CC,EAAAA,cAP2C;AAQ3CC,EAAAA,YAR2C;AAS3CC,EAAAA,cAT2C;AAU3CC,EAAAA,UAV2C;AAW3CC,EAAAA;AAX2C,CAAD,KAYtC;AACJ,QAAMC,aAAa,GAAGpB,UAAU,CAACO,aAAD,CAAhC;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAEE,UADd;AAEE,IAAA,cAAc,EAAEG,cAFlB;AAGE,IAAA,cAAc,EAAEK,cAHlB;AAIE,IAAA,UAAU,EAAEC,UAJd;AAKE,IAAA,MAAM,EAAEC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,gBAAgB,IAAI,CAACG,QAArB,iBACC,oBAAC,eAAD;AACE,IAAA,QAAQ,EAAEH,gBADZ;AAEE,IAAA,mBAAmB,EAAEC,mBAFvB;AAGE,IAAA,WAAW,EAAEG,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQGD,QAAQ,iBACP,oBAAC,YAAD;AACE,IAAA,GAAG,EAAGH,gBAAgB,IAAIA,gBAAgB,CAACW,EAAtC,IAA6C,CADpD;AAEE,IAAA,QAAQ,EAAEX,gBAFZ;AAGE,IAAA,WAAW,EAAEI,WAHf;AAIE,IAAA,cAAc,EAAEC,cAJlB;AAKE,IAAA,YAAY,EAAEC,YALhB;AAME,IAAA,UAAU,EAAEE,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAVF,CADF;AAgCD,CA/CD;;AAiDA,eAAeZ,QAAQ,CAACE,iBAAD,CAAvB","sourcesContent":["import React, { SyntheticEvent, useContext } from \"react\";\nimport { Grid, GridColumn } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityDetails from \"../details/ActivityDetails\";\nimport ActivityForm from \"../form/ActivityForm\";\n\n// Mobx\nimport { observer } from \"mobx-react-lite\";\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\n\ninterface IProps {\n  activities: IActivity[];\n  selectActivity: (id: string) => void;\n  setSelectedActivity: (activity: IActivity | null) => void;\n  selectedActivity: IActivity | null;\n  editMode: boolean;\n  setEditMode: (editMode: boolean) => void;\n  createActivity: (activity: IActivity) => void;\n  editActivity: (activity: IActivity) => void;\n  deleteActivity: (\n    event: SyntheticEvent<HTMLButtonElement>,\n    id: string\n  ) => void;\n  submitting: boolean;\n  target: string;\n}\n\nconst ActivityDashboard: React.FC<IProps> = ({\n  activities,\n  selectedActivity,\n  setSelectedActivity,\n  selectActivity,\n  editMode,\n  setEditMode,\n  createActivity,\n  editActivity,\n  deleteActivity,\n  submitting,\n  target,\n}) => {\n  const activityStore = useContext(ActivityStore);\n\n  return (\n    <Grid>\n      <GridColumn width={10}>\n        <ActivityList\n          activities={activities}\n          selectActivity={selectActivity}\n          deleteActivity={deleteActivity}\n          submitting={submitting}\n          target={target}\n        />\n      </GridColumn>\n      <GridColumn width={6}>\n        {selectedActivity && !editMode && (\n          <ActivityDetails\n            activity={selectedActivity}\n            setSelectedActivity={setSelectedActivity}\n            setEditMode={setEditMode}\n          />\n        )}\n        {editMode && (\n          <ActivityForm\n            key={(selectedActivity && selectedActivity.id) || 0}\n            activity={selectedActivity!}\n            setEditMode={setEditMode}\n            createActivity={createActivity}\n            editActivity={editActivity}\n            submitting={submitting}\n          />\n        )}\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDashboard);\n"]},"metadata":{},"sourceType":"module"}