{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/app/layout/App.tsx\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport agent from \"../api/agent\";\n\nconst App = () => {\n  const [activities, setActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n\n  const handleSelectActivity = id => {\n    setSelectedActivity(activities.filter(activity => activity.id === id)[0]);\n    setEditMode(false);\n  };\n\n  const handleOpenCreateForm = () => {\n    setSelectedActivity(null);\n    setEditMode(true);\n  };\n\n  const handleCreateActivity = activity => {\n    setActivities([...activities, activity]);\n    setSelectedActivity(activity);\n    setEditMode(false);\n  };\n\n  const handleEditActivity = activity => {\n    setActivities([...activities.filter(a => a.id !== activity.id), activity]);\n    setSelectedActivity(activity);\n    setEditMode(false);\n  };\n\n  const handleDeleteActivity = id => {\n    setActivities([...activities.filter(activity => activity.id !== id)]);\n  };\n\n  useEffect(() => {\n    agent.Activities.list().then(response => {\n      let activities = [];\n      response.forEach(activity => {\n        activity.date = activity.date.split(\".\")[0];\n        activities.push(activity);\n      });\n      setActivities(activities);\n    });\n  }, []); // ensure useEffect only runs one time only every time we reach this page\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    openCreateForm: handleOpenCreateForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      marginTop: \"7em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActivityDashboard, {\n    activities: activities,\n    selectedActivity: selectedActivity,\n    selectActivity: handleSelectActivity,\n    setSelectedActivity: setSelectedActivity,\n    editMode: editMode,\n    setEditMode: setEditMode,\n    createActivity: handleCreateActivity,\n    editActivity: handleEditActivity,\n    deleteActivity: handleDeleteActivity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/app/layout/App.tsx"],"names":["React","useEffect","useState","Fragment","Container","NavBar","ActivityDashboard","agent","App","activities","setActivities","selectedActivity","setSelectedActivity","editMode","setEditMode","handleSelectActivity","id","filter","activity","handleOpenCreateForm","handleCreateActivity","handleEditActivity","a","handleDeleteActivity","Activities","list","then","response","forEach","date","split","push","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"semantic-ui-react\";\nimport { IActivity } from \"../models/activity\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport agent from \"../api/agent\";\n\nconst App = () => {\n  const [activities, setActivities] = useState<IActivity[]>([]);\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(\n    null\n  );\n  const [editMode, setEditMode] = useState(false);\n\n  const handleSelectActivity = (id: string) => {\n    setSelectedActivity(activities.filter((activity) => activity.id === id)[0]);\n    setEditMode(false);\n  };\n\n  const handleOpenCreateForm = () => {\n    setSelectedActivity(null);\n    setEditMode(true);\n  };\n\n  const handleCreateActivity = (activity: IActivity) => {\n    setActivities([...activities, activity]);\n    setSelectedActivity(activity);\n    setEditMode(false);\n  };\n\n  const handleEditActivity = (activity: IActivity) => {\n    setActivities([\n      ...activities.filter((a) => a.id !== activity.id),\n      activity,\n    ]);\n    setSelectedActivity(activity);\n    setEditMode(false);\n  };\n\n  const handleDeleteActivity = (id: string) => {\n    setActivities([...activities.filter((activity) => activity.id !== id)]);\n  };\n\n  useEffect(() => {\n    agent.Activities.list().then((response) => {\n      let activities: IActivity[] = [];\n      response.forEach((activity) => {\n        activity.date = activity.date.split(\".\")[0];\n        activities.push(activity);\n      });\n      setActivities(activities);\n    });\n  }, []); // ensure useEffect only runs one time only every time we reach this page\n\n  return (\n    <Fragment>\n      <NavBar openCreateForm={handleOpenCreateForm} />\n      <Container style={{ marginTop: \"7em\" }}>\n        <ActivityDashboard\n          activities={activities}\n          selectedActivity={selectedActivity}\n          selectActivity={handleSelectActivity}\n          setSelectedActivity={setSelectedActivity}\n          editMode={editMode}\n          setEditMode={setEditMode}\n          createActivity={handleCreateActivity}\n          editActivity={handleEditActivity}\n          deleteActivity={handleDeleteActivity}\n        />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}