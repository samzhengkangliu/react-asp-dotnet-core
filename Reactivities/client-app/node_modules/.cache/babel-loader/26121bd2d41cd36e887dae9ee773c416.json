{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx\";\nimport React, { useState } from \"react\";\nimport { Segment, Form, Button } from \"semantic-ui-react\";\n\nconst ActivityForm = ({\n  activity: initialFormState,\n  setEditMode\n}) => {\n  const initializeForm = () => {\n    if (initialFormState) {\n      return initialFormState;\n    } else {\n      return {\n        id: \"\",\n        title: \"\",\n        category: \"\",\n        description: \"\",\n        date: \"\",\n        city: \"\",\n        venue: \"\"\n      };\n    }\n  };\n\n  const [activity, setActivity] = useState(initializeForm);\n  return /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Title\",\n    value: activity.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.TextArea, {\n    rows: 2,\n    placeholder: \"Description\",\n    value: activity.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Category\",\n    value: activity.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    type: \"date\",\n    placeholder: \"Date\",\n    value: activity.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"City\",\n    value: activity.city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Venue\",\n    value: activity.venue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    floated: \"right\",\n    positive: true,\n    type: \"submit\",\n    content: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    floated: \"right\",\n    type: \"button\",\n    content: \"Cancel\",\n    onClick: () => setEditMode(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ActivityForm;","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx"],"names":["React","useState","Segment","Form","Button","ActivityForm","activity","initialFormState","setEditMode","initializeForm","id","title","category","description","date","city","venue","setActivity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,QAAsC,mBAAtC;;AAQA,MAAMC,YAA8B,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAEC,gBAAZ;AAA8BC,EAAAA;AAA9B,CAAD,KAAiD;AACtF,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIF,gBAAJ,EAAsB;AACpB,aAAOA,gBAAP;AACD,KAFD,MAEO;AACL,aAAO;AACLG,QAAAA,EAAE,EAAE,EADC;AAELC,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,QAAQ,EAAE,EAHL;AAILC,QAAAA,WAAW,EAAE,EAJR;AAKLC,QAAAA,IAAI,EAAE,EALD;AAMLC,QAAAA,IAAI,EAAE,EAND;AAOLC,QAAAA,KAAK,EAAE;AAPF,OAAP;AASD;AACF,GAdD;;AAgBA,QAAM,CAACV,QAAD,EAAWW,WAAX,IAA0BhB,QAAQ,CAAYQ,cAAZ,CAAxC;AAEA,sBACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEH,QAAQ,CAACK,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD,CAAM,QAAN;AAAe,IAAA,IAAI,EAAE,CAArB;AAAwB,IAAA,WAAW,EAAC,aAApC;AAAkD,IAAA,KAAK,EAAEL,QAAQ,CAACO,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAC,UAAxB;AAAmC,IAAA,KAAK,EAAEP,QAAQ,CAACM,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAC,MAApC;AAA2C,IAAA,KAAK,EAAEN,QAAQ,CAACQ,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAER,QAAQ,CAACS,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAET,QAAQ,CAACU,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAwB,IAAA,QAAQ,MAAhC;AAAiC,IAAA,IAAI,EAAC,QAAtC;AAA+C,IAAA,OAAO,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,KAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF;AAmBD,CAtCD;;AAwCA,eAAeH,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Segment, Form, Button } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\n\ninterface IProps {\n  activity: IActivity;\n  setEditMode: (editMode: boolean) => void;\n}\n\nconst ActivityForm: React.FC<IProps> = ({ activity: initialFormState, setEditMode }) => {\n  const initializeForm = () => {\n    if (initialFormState) {\n      return initialFormState;\n    } else {\n      return {\n        id: \"\",\n        title: \"\",\n        category: \"\",\n        description: \"\",\n        date: \"\",\n        city: \"\",\n        venue: \"\",\n      };\n    }\n  };\n\n  const [activity, setActivity] = useState<IActivity>(initializeForm);\n\n  return (\n    <Segment clearing>\n      <Form>\n        <Form.Input placeholder=\"Title\" value={activity.title}/>\n        <Form.TextArea rows={2} placeholder=\"Description\" value={activity.description}/>\n        <Form.Input placeholder=\"Category\" value={activity.category}/>\n        <Form.Input type=\"date\" placeholder=\"Date\" value={activity.date}/>\n        <Form.Input placeholder=\"City\" value={activity.city}/>\n        <Form.Input placeholder=\"Venue\" value={activity.venue}/>\n        <Button floated=\"right\" positive type=\"submit\" content=\"Submit\" />\n        <Button\n          floated=\"right\"\n          type=\"button\"\n          content=\"Cancel\"\n          onClick={() => setEditMode(false)}\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default ActivityForm;\n"]},"metadata":{},"sourceType":"module"}