{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/app/layout/App.tsx\";\nimport React, { useEffect, useState, Fragment, useContext } from \"react\";\nimport { Container } from \"semantic-ui-react\"; // Interface\n\n// Component\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport LoadingComponent from \"./LoadingComponent\"; // API\n\nimport agent from \"../api/agent\"; // Mobx\n\nimport { observer } from \"mobx-react-lite\";\nimport ActivityStore from \"../stores/ActivityStore\";\n\nconst App = () => {\n  const activityStore = useContext(ActivityStore);\n  const [activities, setActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  const handleDeleteActivity = (event, id) => {\n    setSubmitting(true);\n    setTarget(event.currentTarget.name);\n    agent.Activities.delete(id).then(() => {\n      setActivities([...activities.filter(activity => activity.id !== id)]);\n    }).then(() => setSubmitting(false));\n  };\n\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]);\n  if (activityStore.loadingInitial) return /*#__PURE__*/React.createElement(LoadingComponent, {\n    content: \"Loading activities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      marginTop: \"7em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActivityDashboard, {\n    setSelectedActivity: setSelectedActivity,\n    setEditMode: setEditMode,\n    deleteActivity: handleDeleteActivity,\n    submitting: submitting,\n    target: target,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default observer(App);","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/app/layout/App.tsx"],"names":["React","useEffect","useState","Fragment","useContext","Container","NavBar","ActivityDashboard","LoadingComponent","agent","observer","ActivityStore","App","activityStore","activities","setActivities","selectedActivity","setSelectedActivity","editMode","setEditMode","submitting","setSubmitting","target","setTarget","handleDeleteActivity","event","id","currentTarget","name","Activities","delete","then","filter","activity","loadActivities","loadingInitial","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IACEC,SADF,EAEEC,QAFF,EAGEC,QAHF,EAKEC,UALF,QAMO,OANP;AAOA,SAASC,SAAT,QAA0B,mBAA1B,C,CAEA;;AAGA;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,iBAAP,MAA8B,uDAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,aAAa,GAAGT,UAAU,CAACO,aAAD,CAAhC;AAEA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAc,EAAd,CAA5C;AACA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CACtD,IADsD,CAAxD;AAGA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMsB,oBAAoB,GAAG,CAC3BC,KAD2B,EAE3BC,EAF2B,KAGxB;AACHL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,SAAS,CAACE,KAAK,CAACE,aAAN,CAAoBC,IAArB,CAAT;AACAnB,IAAAA,KAAK,CAACoB,UAAN,CAAiBC,MAAjB,CAAwBJ,EAAxB,EACGK,IADH,CACQ,MAAM;AACVhB,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAU,CAACkB,MAAX,CAAmBC,QAAD,IAAcA,QAAQ,CAACP,EAAT,KAAgBA,EAAhD,CAAJ,CAAD,CAAb;AACD,KAHH,EAIGK,IAJH,CAIQ,MAAMV,aAAa,CAAC,KAAD,CAJ3B;AAKD,GAXD;;AAaApB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAACqB,cAAd;AACD,GAFQ,EAEN,CAACrB,aAAD,CAFM,CAAT;AAIA,MAAIA,aAAa,CAACsB,cAAlB,EACE,oBAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEF,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AACE,IAAA,mBAAmB,EAAEnB,mBADvB;AAEE,IAAA,WAAW,EAAEE,WAFf;AAGE,IAAA,cAAc,EAAEK,oBAHlB;AAIE,IAAA,UAAU,EAAEJ,UAJd;AAKE,IAAA,MAAM,EAAEE,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAcD,CA7CD;;AA+CA,eAAeZ,QAAQ,CAACE,GAAD,CAAvB","sourcesContent":["import React, {\n  useEffect,\n  useState,\n  Fragment,\n  SyntheticEvent,\n  useContext,\n} from \"react\";\nimport { Container } from \"semantic-ui-react\";\n\n// Interface\nimport { IActivity } from \"../models/activity\";\n\n// Component\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport LoadingComponent from \"./LoadingComponent\";\n\n// API\nimport agent from \"../api/agent\";\n\n// Mobx\nimport { observer } from \"mobx-react-lite\";\nimport ActivityStore from \"../stores/ActivityStore\";\n\nconst App = () => {\n  const activityStore = useContext(ActivityStore);\n\n  const [activities, setActivities] = useState<IActivity[]>([]);\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(\n    null\n  );\n  const [editMode, setEditMode] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  const handleDeleteActivity = (\n    event: SyntheticEvent<HTMLButtonElement>,\n    id: string\n  ) => {\n    setSubmitting(true);\n    setTarget(event.currentTarget.name);\n    agent.Activities.delete(id)\n      .then(() => {\n        setActivities([...activities.filter((activity) => activity.id !== id)]);\n      })\n      .then(() => setSubmitting(false));\n  };\n\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]);\n\n  if (activityStore.loadingInitial)\n    return <LoadingComponent content=\"Loading activities\" />;\n\n  return (\n    <Fragment>\n      <NavBar />\n      <Container style={{ marginTop: \"7em\" }}>\n        <ActivityDashboard\n          setSelectedActivity={setSelectedActivity}\n          setEditMode={setEditMode}\n          deleteActivity={handleDeleteActivity}\n          submitting={submitting}\n          target={target}\n        />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}