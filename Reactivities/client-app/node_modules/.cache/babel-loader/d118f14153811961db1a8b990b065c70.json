{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/app/common/form/DateInput.tsx\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport { DateTimePicker } from \"react-widgets\";\n\nconst DateInput = ({\n  input,\n  width,\n  id = null,\n  placeholder,\n  date = false,\n  time = false,\n  meta: {\n    touched,\n    error\n  },\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Form.Field, {\n    error: touched && !!error,\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, Object.assign({\n    placeholder: placeholder,\n    value: input.value || null,\n    onChange: input.onChange,\n    date: date,\n    time: time\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  })), touched && error && /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, error));\n};\n\nexport default DateInput;","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/app/common/form/DateInput.tsx"],"names":["React","Form","Label","DateTimePicker","DateInput","input","width","id","placeholder","date","time","meta","touched","error","rest","value","onChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAyBC,IAAzB,EAA+BC,KAA/B,QAA4C,mBAA5C;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAMA,MAAMC,SAA2B,GAAG,CAAC;AACjCC,EAAAA,KADiC;AAEjCC,EAAAA,KAFiC;AAGjCC,EAAAA,EAAE,GAAG,IAH4B;AAIjCC,EAAAA,WAJiC;AAKjCC,EAAAA,IAAI,GAAG,KAL0B;AAMjCC,EAAAA,IAAI,GAAG,KAN0B;AAOjCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAP2B;AAQjC,KAAGC;AAR8B,CAAD,KAS9B;AACJ,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAEF,OAAO,IAAI,CAAC,CAACC,KAAhC;AAAuC,IAAA,KAAK,EAAEP,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAEE,WADf;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACU,KAAN,IAAe,IAFxB;AAGE,IAAA,QAAQ,EAAEV,KAAK,CAACW,QAHlB;AAIE,IAAA,IAAI,EAAEP,IAJR;AAKE,IAAA,IAAI,EAAEC;AALR,KAMMI,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EASGF,OAAO,IAAIC,KAAX,iBACC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,KAAK,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CAVJ,CADF;AAiBD,CA3BD;;AA6BA,eAAeT,SAAf","sourcesContent":["import React from \"react\";\nimport { FieldRenderProps } from \"react-final-form\";\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\nimport { DateTimePicker } from \"react-widgets\";\n\ninterface IProps extends FieldRenderProps<Date,HTMLElement>, FormFieldProps{\n  id?: string | undefined\n}\n\nconst DateInput: React.FC<IProps> = ({\n    input,\n    width,\n    id = null,\n    placeholder,\n    date = false,\n    time = false,\n    meta: { touched, error },\n    ...rest\n}) => {\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n      <DateTimePicker\n        placeholder={placeholder}\n        value={input.value || null}\n        onChange={input.onChange}\n        date={date}\n        time={time}\n        {...rest}\n      />\n      {touched && error && (\n        <Label basic color=\"red\">\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default DateInput;\n"]},"metadata":{},"sourceType":"module"}