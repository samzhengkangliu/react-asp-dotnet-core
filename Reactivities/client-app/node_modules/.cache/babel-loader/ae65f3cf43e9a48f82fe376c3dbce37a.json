{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Grid, Segment, Form, Button } from \"semantic-ui-react\";\nimport { v4 as uuid } from \"uuid\";\nimport { Form as FinalForm, Field } from \"react-final-form\"; // Interface\n\nimport { ActivityFormValues } from \"../../../app/models/activity\";\nimport TextInput from \"../../../app/common/form/TextInput\"; // Mobx\n\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\nimport { observer } from \"mobx-react-lite\";\n// Components\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\nimport SelectInput from \"../../../app/common/form/SelectInput\";\nimport { category } from \"../../../app/common/options/categoryOptions\";\nimport DateInput from \"../../../app/common/form/DateInput\";\nimport { combineDateAndTime } from \"../../../app/common/util/util\";\n\nconst ActivityForm = ({\n  match,\n  history\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    activity: initialFormState,\n    loadActivity,\n    clearActivity\n  } = activityStore;\n  const [activity, setActivity] = useState(new ActivityFormValues());\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (match.params.id) {\n      setLoading(true);\n      loadActivity(match.params.id).then(activity => setActivity(new ActivityFormValues(activity))).finally(() => setLoading(false));\n    }\n\n    return () => {\n      clearActivity();\n    };\n  }, [loadActivity, match.params.id]);\n\n  const handleFinalFormSubmit = values => {\n    const dateAndTime = combineDateAndTime(values.date, values.time);\n    const {\n      date,\n      time,\n      ...activity\n    } = values;\n    activity.date = dateAndTime;\n\n    if (!activity.id) {\n      let newActivity = { ...activity,\n        id: uuid()\n      };\n      createActivity(newActivity);\n    } else {\n      editActivity(activity);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FinalForm, {\n    initialValues: activity,\n    onSubmit: handleFinalFormSubmit,\n    render: ({\n      handleSubmit\n    }) => /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      placeholder: \"Title\",\n      value: activity.title,\n      component: TextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      placeholder: \"Description\",\n      rows: 3,\n      value: activity.description,\n      component: TextAreaInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"category\",\n      placeholder: \"Category\",\n      options: category,\n      value: activity.category,\n      component: SelectInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"date\",\n      placeholder: \"Date\",\n      date: true,\n      value: activity.date,\n      component: DateInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"time\",\n      placeholder: \"Time\",\n      time: true,\n      value: activity.date,\n      component: DateInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Field, {\n      name: \"city\",\n      placeholder: \"City\",\n      value: activity.city,\n      component: TextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"venue\",\n      placeholder: \"Venue\",\n      value: activity.venue,\n      component: TextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      loading: submitting,\n      floated: \"right\",\n      positive: true,\n      type: \"submit\",\n      content: \"Submit\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: activity.id ? () => history.push(`/activities/${activity.id}`) : () => history.push(\"/activities\"),\n      floated: \"right\",\n      type: \"button\",\n      content: \"Cancel\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default observer(ActivityForm);","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx"],"names":["React","useState","useContext","useEffect","Grid","Segment","Form","Button","v4","uuid","FinalForm","Field","ActivityFormValues","TextInput","ActivityStore","observer","TextAreaInput","SelectInput","category","DateInput","combineDateAndTime","ActivityForm","match","history","activityStore","createActivity","editActivity","submitting","activity","initialFormState","loadActivity","clearActivity","setActivity","loading","setLoading","params","id","then","finally","handleFinalFormSubmit","values","dateAndTime","date","time","newActivity","handleSubmit","title","description","city","venue","push"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent, useContext, useEffect } from \"react\";\nimport { Grid, Segment, Form, Button } from \"semantic-ui-react\";\nimport { v4 as uuid } from \"uuid\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\n// Interface\nimport {\n  IActivityFormValues,\n  ActivityFormValues,\n} from \"../../../app/models/activity\";\nimport TextInput from \"../../../app/common/form/TextInput\";\n\n// Mobx\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\n// Components\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\nimport SelectInput from \"../../../app/common/form/SelectInput\";\nimport { category } from \"../../../app/common/options/categoryOptions\";\nimport DateInput from \"../../../app/common/form/DateInput\";\nimport { combineDateAndTime } from \"../../../app/common/util/util\";\n\ninterface DetailsParams {\n  id: string;\n}\n\nconst ActivityForm: React.FC<RouteComponentProps<DetailsParams>> = ({\n  match,\n  history,\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    activity: initialFormState,\n    loadActivity,\n    clearActivity,\n  } = activityStore;\n\n  const [activity, setActivity] = useState(new ActivityFormValues());\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (match.params.id) {\n      setLoading(true);\n      loadActivity(match.params.id)\n        .then((activity) => setActivity(new ActivityFormValues(activity)))\n        .finally(() => setLoading(false));\n    }\n    return () => {\n      clearActivity();\n    };\n  }, [loadActivity, match.params.id]);\n\n  const handleFinalFormSubmit = (values: any) => {\n    const dateAndTime = combineDateAndTime(values.date, values.time);\n    const { date, time, ...activity } = values;\n    activity.date = dateAndTime;\n\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity);\n    } else {\n      editActivity(activity);\n    }\n  };\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <Segment clearing>\n          <FinalForm\n            initialValues={activity}\n            onSubmit={handleFinalFormSubmit}\n            render={({ handleSubmit }) => (\n              <Form onSubmit={handleSubmit} loading={loading}>\n                <Field\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  value={activity.title}\n                  component={TextInput}\n                />\n                <Field\n                  name=\"description\"\n                  placeholder=\"Description\"\n                  rows={3}\n                  value={activity.description}\n                  component={TextAreaInput}\n                />\n                <Field\n                  name=\"category\"\n                  placeholder=\"Category\"\n                  options={category}\n                  value={activity.category}\n                  component={SelectInput}\n                />\n                <Form.Group widths=\"equal\">\n                  <Field\n                    name=\"date\"\n                    placeholder=\"Date\"\n                    date={true}\n                    value={activity.date}\n                    component={DateInput}\n                  />\n                  <Field\n                    name=\"time\"\n                    placeholder=\"Time\"\n                    time={true}\n                    value={activity.date}\n                    component={DateInput}\n                  />\n                </Form.Group>\n\n                <Field\n                  name=\"city\"\n                  placeholder=\"City\"\n                  value={activity.city}\n                  component={TextInput}\n                />\n                <Field\n                  name=\"venue\"\n                  placeholder=\"Venue\"\n                  value={activity.venue}\n                  component={TextInput}\n                />\n                <Button\n                  loading={submitting}\n                  floated=\"right\"\n                  positive\n                  type=\"submit\"\n                  content=\"Submit\"\n                  disabled={loading}\n                />\n                <Button\n                  onClick={\n                    activity.id\n                      ? () => history.push(`/activities/${activity.id}`)\n                      : () => history.push(\"/activities\")\n                  }\n                  floated=\"right\"\n                  type=\"button\"\n                  content=\"Cancel\"\n                  disabled={loading}\n                />\n              </Form>\n            )}\n          />\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityForm);\n"]},"metadata":{},"sourceType":"module"}