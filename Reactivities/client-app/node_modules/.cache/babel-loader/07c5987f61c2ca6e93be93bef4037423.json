{"ast":null,"code":"import _initializerDefineProperty from \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _temp;\n\nimport { observable, action } from \"mobx\";\nimport { createContext } from \"react\";\nimport agent from \"../api/agent\";\nlet ActivityStore = (_class = (_temp = class ActivityStore {\n  constructor() {\n    _initializerDefineProperty(this, \"activities\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"selectedActivity\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"loadingInitial\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"editMode\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"loadActivities\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"selectActivity\", _descriptor6, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"activities\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"selectedActivity\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"loadingInitial\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"editMode\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"loadActivities\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      this.loadingInitial = true;\n\n      try {\n        const activities = await agent.Activities.list();\n        activities.forEach(activity => {\n          activity.date = activity.date.split(\".\")[0];\n          this.activities.push(activity);\n        });\n        this.loadingInitial = false;\n      } catch (error) {\n        console.log(error);\n        this.loadingInitial = false;\n      }\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"selectActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return id => {\n      this.selectedActivity = this.activities.find(a => a.id === id);\n      this.editMode = false;\n    };\n  }\n})), _class);\nexport default createContext(new ActivityStore());","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/app/stores/ActivityStore.ts"],"names":["observable","action","createContext","agent","ActivityStore","loadingInitial","activities","Activities","list","forEach","activity","date","split","push","error","console","log","id","selectedActivity","find","a","editMode"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,KAAP,MAAkB,cAAlB;IAEMC,a,sBAAN,MAAMA,aAAN,CAAoB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA,C,oFACjBJ,U;;;;;WAAqC,E;;oFACrCA,U;;;;;kFACAA,U;;;;;WAA4B,K;;4EAC5BA,U;;;;;WAAsB,K;;kFAEtBC,M;;;;;WAAwB,YAAY;AACnC,WAAKI,cAAL,GAAsB,IAAtB;;AACA,UAAI;AACF,cAAMC,UAAU,GAAG,MAAMH,KAAK,CAACI,UAAN,CAAiBC,IAAjB,EAAzB;AACAF,QAAAA,UAAU,CAACG,OAAX,CAAoBC,QAAD,IAAc;AAC/BA,UAAAA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAhB;AACA,eAAKN,UAAL,CAAgBO,IAAhB,CAAqBH,QAArB;AACD,SAHD;AAIA,aAAKL,cAAL,GAAsB,KAAtB;AACD,OAPD,CAOE,OAAOS,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKT,cAAL,GAAsB,KAAtB;AACD;AACF,K;;kFAEAJ,M;;;;;WAAyBgB,EAAD,IAAgB;AACvC,WAAKC,gBAAL,GAAwB,KAAKZ,UAAL,CAAgBa,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASA,EAArC,CAAxB;AACA,WAAKI,QAAL,GAAgB,KAAhB;AACD,K;;;AAGH,eAAenB,aAAa,CAAC,IAAIE,aAAJ,EAAD,CAA5B","sourcesContent":["import { observable, action } from \"mobx\";\nimport { createContext } from \"react\";\nimport { IActivity } from \"../models/activity\";\nimport agent from \"../api/agent\";\n\nclass ActivityStore {\n  @observable activities: IActivity[] = [];\n  @observable selectedActivity: IActivity | undefined;\n  @observable loadingInitial = false;\n  @observable editMode = false;\n\n  @action loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const activities = await agent.Activities.list();\n      activities.forEach((activity) => {\n        activity.date = activity.date.split(\".\")[0];\n        this.activities.push(activity);\n      });\n      this.loadingInitial = false;\n    } catch (error) {\n      console.log(error);\n      this.loadingInitial = false;\n    }\n  };\n\n  @action selectActivity = (id: string) => {\n    this.selectedActivity = this.activities.find((a) => a.id === id);\n    this.editMode = false;\n  };\n}\n\nexport default createContext(new ActivityStore());\n"]},"metadata":{},"sourceType":"module"}