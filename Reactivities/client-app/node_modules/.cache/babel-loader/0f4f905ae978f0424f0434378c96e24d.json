{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/details/ActivityDetailedHeader.tsx\";\nimport React from \"react\";\nimport { Segment, Item, Image, Header, Button } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nconst activityImageStyle = {\n  filter: \"brightness(30%)\"\n};\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\"\n};\n\nconst ActivityDetailedHeader = ({\n  activity\n}) => {\n  return /*#__PURE__*/React.createElement(Segment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    basic: true,\n    attached: \"top\",\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: `/assets/categoryImages/${activity.category}.jpg`,\n    fluid: true,\n    style: activityImageStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Segment, {\n    basic: true,\n    style: activityImageTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    size: \"huge\",\n    content: activity.title,\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, format(activity.date, \"eeee do MMMM\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Hosted by \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"Bob\"))))))), /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    attached: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Join Activity\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Cancel attendance\"), /*#__PURE__*/React.createElement(Button, {\n    as: Link,\n    to: `/manage/${activity.id}`,\n    color: \"orange\",\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Manage Event\")));\n};\n\nexport default observer(ActivityDetailedHeader);","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/details/ActivityDetailedHeader.tsx"],"names":["React","Segment","Item","Image","Header","Button","observer","Link","format","activityImageStyle","filter","activityImageTextStyle","position","bottom","left","width","height","color","ActivityDetailedHeader","activity","padding","category","title","date","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Segment, Item, Image, Header, Button } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\n\nimport { format } from \"date-fns\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\n  activity,\n}) => {\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment basic style={activityImageTextStyle}>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"eeee do MMMM\")}</p>\n                <p>\n                  Hosted by <strong>Bob</strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        <Button color=\"teal\">Join Activity</Button>\n        <Button>Cancel attendance</Button>\n        <Button as={Link} to={`/manage/${activity.id}`} color=\"orange\" floated=\"right\">\n          Manage Event\n        </Button>\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityDetailedHeader);\n"]},"metadata":{},"sourceType":"module"}