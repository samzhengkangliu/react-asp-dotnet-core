{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/dashboard/ActivityDashboard.tsx\";\nimport React, { useEffect, useContext } from \"react\";\nimport { Grid } from \"semantic-ui-react\"; // Components\n\nimport ActivityList from \"./ActivityList\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\"; // Mobx\n\nimport { observer } from \"mobx-react-lite\";\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\n\nconst ActivityDashboard = () => {\n  const activityStore = useContext(ActivityStore);\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]);\n  if (activityStore.loadingInitial) return /*#__PURE__*/React.createElement(LoadingComponent, {\n    content: \"Loading activities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActivityList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Activity filters\")));\n};\n\nexport default observer(ActivityDashboard);","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/dashboard/ActivityDashboard.tsx"],"names":["React","useEffect","useContext","Grid","ActivityList","LoadingComponent","observer","ActivityStore","ActivityDashboard","activityStore","loadActivities","loadingInitial"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B,C,CAEA;;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAEA,MAAMC,iBAA2B,GAAG,MAAM;AACxC,QAAMC,aAAa,GAAGP,UAAU,CAACK,aAAD,CAAhC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,aAAa,CAACC,cAAd;AACD,GAFQ,EAEN,CAACD,aAAD,CAFM,CAAT;AAIA,MAAIA,aAAa,CAACE,cAAlB,EACE,oBAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEF,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAJF,CADF;AAUD,CApBD;;AAsBA,eAAeL,QAAQ,CAACE,iBAAD,CAAvB","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\n// Components\nimport ActivityList from \"./ActivityList\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\n\n// Mobx\nimport { observer } from \"mobx-react-lite\";\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\n\nconst ActivityDashboard: React.FC = () => {\n  const activityStore = useContext(ActivityStore);\n\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]);\n\n  if (activityStore.loadingInitial)\n    return <LoadingComponent content=\"Loading activities\" />;\n  \n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityList />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <h2>Activity filters</h2>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDashboard);\n"]},"metadata":{},"sourceType":"module"}