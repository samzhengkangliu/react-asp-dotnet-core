{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Grid, Segment, Form, Button } from \"semantic-ui-react\";\nimport { Form as FinalForm, Field } from \"react-final-form\"; // Interface\n\n// Mobx\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\nimport { observer } from \"mobx-react-lite\";\n\nconst ActivityForm = ({\n  match,\n  history\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    activity: initialFormState,\n    loadActivity,\n    clearActivity\n  } = activityStore;\n  const [activity, setActivity] = useState({\n    id: \"\",\n    title: \"\",\n    category: \"\",\n    description: \"\",\n    date: \"\",\n    city: \"\",\n    venue: \"\"\n  });\n  useEffect(() => {\n    if (match.params.id && activity.id.length === 0) {\n      loadActivity(match.params.id).then(() => initialFormState && setActivity(initialFormState));\n    }\n\n    return () => {\n      clearActivity();\n    };\n  }, [loadActivity, clearActivity, match.params.id, initialFormState, activity.id.length]); // const handleSubmit = () => {\n  //   if (activity.id.length === 0) {\n  //     let newActivity = {\n  //       ...activity,\n  //       id: uuid(),\n  //     };\n  //     createActivity(newActivity).then(() =>\n  //       history.push(`/activities/${newActivity.id}`)\n  //     );\n  //   } else {\n  //     editActivity(activity).then(() =>\n  //       history.push(`/activities/${activity.id}`)\n  //     );\n  //   }\n  // };\n\n  const handleFinalFormSubmit = values => {\n    console.log(values);\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n    setActivity({ ...activity,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FinalForm, {\n    onSubmit: handleFinalFormSubmit,\n    render: ({\n      handleSubmit\n    }) => /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      placeholder: \"Title\",\n      value: activity.title,\n      component: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.TextArea, {\n      onChange: handleInputChange,\n      name: \"description\",\n      rows: 2,\n      placeholder: \"Description\",\n      value: activity.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      onChange: handleInputChange,\n      name: \"category\",\n      placeholder: \"Category\",\n      value: activity.category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      onChange: handleInputChange,\n      name: \"date\",\n      type: \"datetime-local\",\n      placeholder: \"Date\",\n      value: activity.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      onChange: handleInputChange,\n      name: \"city\",\n      placeholder: \"City\",\n      value: activity.city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      onChange: handleInputChange,\n      name: \"venue\",\n      placeholder: \"Venue\",\n      value: activity.venue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      loading: submitting,\n      floated: \"right\",\n      positive: true,\n      type: \"submit\",\n      content: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => history.push(\"/activities\"),\n      floated: \"right\",\n      type: \"button\",\n      content: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default observer(ActivityForm);","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx"],"names":["React","useState","useContext","useEffect","Grid","Segment","Form","Button","FinalForm","Field","ActivityStore","observer","ActivityForm","match","history","activityStore","createActivity","editActivity","submitting","activity","initialFormState","loadActivity","clearActivity","setActivity","id","title","category","description","date","city","venue","params","length","then","handleFinalFormSubmit","values","console","log","handleInputChange","event","name","value","currentTarget","handleSubmit","push"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent, useContext, useEffect } from \"react\";\nimport { Grid, Segment, Form, Button } from \"semantic-ui-react\";\nimport { v4 as uuid } from \"uuid\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\n// Interface\nimport { IActivity } from \"../../../app/models/activity\";\n\n// Mobx\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ninterface DetailsParams {\n  id: string;\n}\n\nconst ActivityForm: React.FC<RouteComponentProps<DetailsParams>> = ({\n  match,\n  history,\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    activity: initialFormState,\n    loadActivity,\n    clearActivity,\n  } = activityStore;\n\n  const [activity, setActivity] = useState<IActivity>({\n    id: \"\",\n    title: \"\",\n    category: \"\",\n    description: \"\",\n    date: \"\",\n    city: \"\",\n    venue: \"\",\n  });\n\n  useEffect(() => {\n    if (match.params.id && activity.id.length === 0) {\n      loadActivity(match.params.id).then(\n        () => initialFormState && setActivity(initialFormState)\n      );\n    }\n    return () => {\n      clearActivity();\n    };\n  }, [\n    loadActivity,\n    clearActivity,\n    match.params.id,\n    initialFormState,\n    activity.id.length,\n  ]);\n\n  // const handleSubmit = () => {\n  //   if (activity.id.length === 0) {\n  //     let newActivity = {\n  //       ...activity,\n  //       id: uuid(),\n  //     };\n  //     createActivity(newActivity).then(() =>\n  //       history.push(`/activities/${newActivity.id}`)\n  //     );\n  //   } else {\n  //     editActivity(activity).then(() =>\n  //       history.push(`/activities/${activity.id}`)\n  //     );\n  //   }\n  // };\n\n  const handleFinalFormSubmit = (values: any) => {\n    console.log(values);\n  };\n\n  const handleInputChange = (\n    event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { name, value } = event.currentTarget;\n    setActivity({ ...activity, [name]: value });\n  };\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <Segment clearing>\n          <FinalForm\n            onSubmit={handleFinalFormSubmit}\n            render={({ handleSubmit }) => (\n              <Form onSubmit={handleSubmit}>\n                <Field\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  value={activity.title}\n                  component=\"input\"\n                />\n                <Form.TextArea\n                  onChange={handleInputChange}\n                  name=\"description\"\n                  rows={2}\n                  placeholder=\"Description\"\n                  value={activity.description}\n                />\n                <Form.Input\n                  onChange={handleInputChange}\n                  name=\"category\"\n                  placeholder=\"Category\"\n                  value={activity.category}\n                />\n                <Form.Input\n                  onChange={handleInputChange}\n                  name=\"date\"\n                  type=\"datetime-local\"\n                  placeholder=\"Date\"\n                  value={activity.date}\n                />\n                <Form.Input\n                  onChange={handleInputChange}\n                  name=\"city\"\n                  placeholder=\"City\"\n                  value={activity.city}\n                />\n                <Form.Input\n                  onChange={handleInputChange}\n                  name=\"venue\"\n                  placeholder=\"Venue\"\n                  value={activity.venue}\n                />\n                <Button\n                  loading={submitting}\n                  floated=\"right\"\n                  positive\n                  type=\"submit\"\n                  content=\"Submit\"\n                />\n                <Button\n                  onClick={() => history.push(\"/activities\")}\n                  floated=\"right\"\n                  type=\"button\"\n                  content=\"Cancel\"\n                />\n              </Form>\n            )}\n          />\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityForm);\n"]},"metadata":{},"sourceType":"module"}