{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Segment, Form, Button } from \"semantic-ui-react\";\nimport { v4 as uuid } from \"uuid\"; // Interface\n\n// Mobx\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\nimport { observer } from \"mobx-react-lite\";\n\nconst ActivityForm = ({\n  match\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    cancelFormOpen,\n    activity: initialFormState,\n    loadActivity\n  } = activityStore;\n  useEffect(() => {\n    if (match.params.id) {\n      loadActivity(match.params.id).then(() => initialFormState && setActivity(initialFormState));\n    }\n  }, []);\n  const [activity, setActivity] = useState({\n    id: \"\",\n    title: \"\",\n    category: \"\",\n    description: \"\",\n    date: \"\",\n    city: \"\",\n    venue: \"\"\n  });\n\n  const handleSubmit = () => {\n    if (activity.id.length === 0) {\n      let newActivity = { ...activity,\n        id: uuid()\n      };\n      createActivity(newActivity);\n    } else {\n      editActivity(activity);\n    }\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n    setActivity({ ...activity,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    onChange: handleInputChange,\n    name: \"title\",\n    placeholder: \"Title\",\n    value: activity.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.TextArea, {\n    onChange: handleInputChange,\n    name: \"description\",\n    rows: 2,\n    placeholder: \"Description\",\n    value: activity.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    onChange: handleInputChange,\n    name: \"category\",\n    placeholder: \"Category\",\n    value: activity.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    onChange: handleInputChange,\n    name: \"date\",\n    type: \"datetime-local\",\n    placeholder: \"Date\",\n    value: activity.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    onChange: handleInputChange,\n    name: \"city\",\n    placeholder: \"City\",\n    value: activity.city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    onChange: handleInputChange,\n    name: \"venue\",\n    placeholder: \"Venue\",\n    value: activity.venue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    loading: submitting,\n    floated: \"right\",\n    positive: true,\n    type: \"submit\",\n    content: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: cancelFormOpen,\n    floated: \"right\",\n    type: \"button\",\n    content: \"Cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default observer(ActivityForm);","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx"],"names":["React","useState","useContext","useEffect","Segment","Form","Button","v4","uuid","ActivityStore","observer","ActivityForm","match","activityStore","createActivity","editActivity","submitting","cancelFormOpen","activity","initialFormState","loadActivity","params","id","then","setActivity","title","category","description","date","city","venue","handleSubmit","length","newActivity","handleInputChange","event","name","value","currentTarget"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent, useContext, useEffect } from \"react\";\nimport { Segment, Form, Button } from \"semantic-ui-react\";\nimport { v4 as uuid } from \"uuid\";\n\n// Interface\nimport { IActivity } from \"../../../app/models/activity\";\n\n// Mobx\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ninterface DetailsParams {\n  id: string;\n}\n\nconst ActivityForm: React.FC<RouteComponentProps<DetailsParams>> = ({\n  match,\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    cancelFormOpen,\n    activity: initialFormState,\n    loadActivity,\n  } = activityStore;\n\n  useEffect(() => {\n    if (match.params.id) {\n      loadActivity(match.params.id).then(\n        () => initialFormState && setActivity(initialFormState)\n      );\n    }\n  }, []);\n\n  const [activity, setActivity] = useState<IActivity>({\n    id: \"\",\n    title: \"\",\n    category: \"\",\n    description: \"\",\n    date: \"\",\n    city: \"\",\n    venue: \"\",\n  });\n\n  const handleSubmit = () => {\n    if (activity.id.length === 0) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity);\n    } else {\n      editActivity(activity);\n    }\n  };\n\n  const handleInputChange = (\n    event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { name, value } = event.currentTarget;\n    setActivity({ ...activity, [name]: value });\n  };\n\n  return (\n    <Segment clearing>\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          onChange={handleInputChange}\n          name=\"title\"\n          placeholder=\"Title\"\n          value={activity.title}\n        />\n        <Form.TextArea\n          onChange={handleInputChange}\n          name=\"description\"\n          rows={2}\n          placeholder=\"Description\"\n          value={activity.description}\n        />\n        <Form.Input\n          onChange={handleInputChange}\n          name=\"category\"\n          placeholder=\"Category\"\n          value={activity.category}\n        />\n        <Form.Input\n          onChange={handleInputChange}\n          name=\"date\"\n          type=\"datetime-local\"\n          placeholder=\"Date\"\n          value={activity.date}\n        />\n        <Form.Input\n          onChange={handleInputChange}\n          name=\"city\"\n          placeholder=\"City\"\n          value={activity.city}\n        />\n        <Form.Input\n          onChange={handleInputChange}\n          name=\"venue\"\n          placeholder=\"Venue\"\n          value={activity.venue}\n        />\n        <Button\n          loading={submitting}\n          floated=\"right\"\n          positive\n          type=\"submit\"\n          content=\"Submit\"\n        />\n        <Button\n          onClick={cancelFormOpen}\n          floated=\"right\"\n          type=\"button\"\n          content=\"Cancel\"\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default observer(ActivityForm);\n"]},"metadata":{},"sourceType":"module"}