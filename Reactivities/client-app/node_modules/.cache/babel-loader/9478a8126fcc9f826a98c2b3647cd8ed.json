{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/details/ActivityDetails.tsx\";\nimport React, { useContext } from \"react\";\nimport { Card, Image, Button } from \"semantic-ui-react\";\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\n\nconst ActivityDetails = ({\n  setSelectedActivity,\n  setEditMode\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    selectedActivity: activity\n  } = activityStore;\n  return /*#__PURE__*/React.createElement(Card, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Image // Add \"!\" to indicate that it cannot be null\n  , {\n    src: `/assets/categoryImages/${activity.category}.jpg`,\n    wrapped: true,\n    ui: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, activity.title), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, activity.date)), /*#__PURE__*/React.createElement(Card.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, activity.description)), /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button.Group, {\n    widths: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    basic: true,\n    color: \"blue\",\n    content: \"Edit\",\n    onClick: () => setEditMode(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    basic: true,\n    color: \"grey\",\n    content: \"Cancel\",\n    onClick: () => setSelectedActivity(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default ActivityDetails;","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/details/ActivityDetails.tsx"],"names":["React","useContext","Card","Image","Button","ActivityStore","ActivityDetails","setSelectedActivity","setEditMode","activityStore","selectedActivity","activity","category","title","date","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AAEA,OAAOC,aAAP,MAA0B,mCAA1B;;AAOA,MAAMC,eAAiC,GAAG,CAAC;AACzCC,EAAAA,mBADyC;AAEzCC,EAAAA;AAFyC,CAAD,KAGpC;AACJ,QAAMC,aAAa,GAAGR,UAAU,CAACI,aAAD,CAAhC;AACA,QAAM;AAAEK,IAAAA,gBAAgB,EAAEC;AAApB,MAAiCF,aAAvC;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CACA;AADA;AAEE,IAAA,GAAG,EAAG,0BAAyBE,QAAQ,CAAEC,QAAS,MAFpD;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,EAAE,EAAE,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,QAAQ,CAAEE,KAAxB,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,QAAQ,CAAEG,IAAjB,CADF,CAFF,eAKE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBH,QAAQ,CAAEI,WAA7B,CALF,CAPF,eAcE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,MAAM,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,OAAO,EAAE,MAAMP,WAAW,CAAC,IAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,OAAO,EAAE,MAAMD,mBAAmB,CAAC,IAAD,CAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAdF,CADF;AAiCD,CAxCD;;AA0CA,eAAeD,eAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Card, Image, Button } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport ActivityStore from \"../../../app/stores/ActivityStore\";\n\ninterface IProps {\n  setSelectedActivity: (activity: IActivity | null) => void;\n  setEditMode: (editMode: boolean) => void;\n}\n\nconst ActivityDetails: React.FC<IProps> = ({\n  setSelectedActivity,\n  setEditMode,\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const { selectedActivity: activity } = activityStore;\n\n  return (\n    <Card fluid>\n      <Image\n      // Add \"!\" to indicate that it cannot be null\n        src={`/assets/categoryImages/${activity!.category}.jpg`}\n        wrapped\n        ui={false}\n      />\n      <Card.Content>\n        <Card.Header>{activity!.title}</Card.Header>\n        <Card.Meta>\n          <span>{activity!.date}</span>\n        </Card.Meta>\n        <Card.Description>{activity!.description}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Button.Group widths={2}>\n          <Button\n            basic\n            color=\"blue\"\n            content=\"Edit\"\n            onClick={() => setEditMode(true)}\n          />\n          <Button\n            basic\n            color=\"grey\"\n            content=\"Cancel\"\n            onClick={() => setSelectedActivity(null)}\n          />\n        </Button.Group>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ActivityDetails;\n"]},"metadata":{},"sourceType":"module"}