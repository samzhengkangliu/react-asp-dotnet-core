{"ast":null,"code":"var _jsxFileName = \"/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx\";\nimport React, { useState } from \"react\";\nimport { Segment, Form, Button } from \"semantic-ui-react\";\n\nconst ActivityForm = ({\n  activity: initialFormState,\n  setEditMode\n}) => {\n  const initializeForm = () => {\n    if (initialFormState) {\n      return initialFormState;\n    } else {\n      return {\n        id: \"\",\n        title: \"\",\n        category: \"\",\n        description: \"\",\n        date: \"\",\n        city: \"\",\n        venue: \"\"\n      };\n    }\n  };\n\n  const [activity, setActivity] = useState(initializeForm);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setActivity({ ...activity,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"title\",\n    placeholder: \"Title\",\n    value: activity.title,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.TextArea, {\n    name: \"description\",\n    rows: 2,\n    placeholder: \"Description\",\n    value: activity.description,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"category\",\n    placeholder: \"Category\",\n    value: activity.category,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"date\",\n    type: \"date\",\n    placeholder: \"Date\",\n    value: activity.date,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"city\",\n    placeholder: \"City\",\n    value: activity.city,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"venue\",\n    placeholder: \"Venue\",\n    value: activity.venue,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    floated: \"right\",\n    positive: true,\n    type: \"submit\",\n    content: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    floated: \"right\",\n    type: \"button\",\n    content: \"Cancel\",\n    onClick: () => setEditMode(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ActivityForm;","map":{"version":3,"sources":["/Users/xz214ue/Documents/Tutorial/react-asp-dotnet-core/Reactivities-frontend/src/features/activities/form/ActivityForm.tsx"],"names":["React","useState","Segment","Form","Button","ActivityForm","activity","initialFormState","setEditMode","initializeForm","id","title","category","description","date","city","venue","setActivity","handleInputChange","event","name","value","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Segment, Form, Button } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\n\ninterface IProps {\n  activity: IActivity;\n  setEditMode: (editMode: boolean) => void;\n}\n\nconst ActivityForm: React.FC<IProps> = ({\n  activity: initialFormState,\n  setEditMode,\n}) => {\n  const initializeForm = () => {\n    if (initialFormState) {\n      return initialFormState;\n    } else {\n      return {\n        id: \"\",\n        title: \"\",\n        category: \"\",\n        description: \"\",\n        date: \"\",\n        city: \"\",\n        venue: \"\",\n      };\n    }\n  };\n\n  const [activity, setActivity] = useState<IActivity>(initializeForm);\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setActivity({ ...activity, [name]: value });\n  };\n\n  return (\n    <Segment clearing>\n      <Form>\n        <Form.Input\n          name=\"title\"\n          placeholder=\"Title\"\n          value={activity.title}\n          onChange={handleInputChange}\n        />\n        <Form.TextArea\n          name=\"description\"\n          rows={2}\n          placeholder=\"Description\"\n          value={activity.description}\n          onChange={handleInputChange}\n        />\n        <Form.Input name=\"category\" placeholder=\"Category\" value={activity.category} onChange={handleInputChange}/>\n        <Form.Input name=\"date\" type=\"date\" placeholder=\"Date\" value={activity.date} onChange={handleInputChange}/>\n        <Form.Input name=\"city\" placeholder=\"City\" value={activity.city} onChange={handleInputChange}/>\n        <Form.Input name=\"venue\" placeholder=\"Venue\" value={activity.venue} onChange={handleInputChange}/>\n        <Button floated=\"right\" positive type=\"submit\" content=\"Submit\" />\n        <Button\n          floated=\"right\"\n          type=\"button\"\n          content=\"Cancel\"\n          onClick={() => setEditMode(false)}\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default ActivityForm;\n"]},"metadata":{},"sourceType":"module"}